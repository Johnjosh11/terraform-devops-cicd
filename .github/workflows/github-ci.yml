name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Enrironment dev||prod'
        required: true
        default: 'dev'

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: '${{ github.event.inputs.environment }}'
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        TF_WORKSPACE: "${{ github.event.inputs.environment }}"

    - name: Terraform plan
      run: |
        terraform validate
    - name: Terraform apply
      id: terraformOutputJson
      run: |
        terraform apply -auto-approve